{"title":"Nginx 学习记录","uid":"217593595b5cc111881f13eb6a828c9a","slug":"Nginx-学习记录","date":"2023-10-16T14:50:22.000Z","updated":"2023-10-16T14:59:03.548Z","comments":true,"path":"api/articles/Nginx-学习记录.json","keywords":null,"cover":null,"content":"<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><ol>\n<li><p>下载</p>\n<ul>\n<li><code>wget https://nginx.org/download/nginx-1.24.0.tar.gz</code></li>\n</ul>\n</li>\n<li><p>解压安装</p>\n<ul>\n<li><code>tar -zxvf nginx-1.13.0.tar.gz -C ./</code></li>\n</ul>\n</li>\n<li><p>安装编译工具及库文件</p>\n<ul>\n<li><code>yum -y install gcc gcc-c++ ncurses-devel perl pcre pcre-devel zlib gzip zlib-devel</code></li>\n</ul>\n</li>\n<li><p>编译安装</p>\n<ul>\n<li><code>./configure --prefix=/usr/local/nginx</code></li>\n<li><code>make &amp;&amp; make install</code></li>\n</ul>\n</li>\n</ol>\n<hr>\n<h2 id=\"基础命令\"><a href=\"#基础命令\" class=\"headerlink\" title=\"基础命令\"></a>基础命令</h2><ul>\n<li>启动Nginx（切换到安装目录下的sbin文件夹下）<ul>\n<li><code>./nginx</code></li>\n</ul>\n</li>\n<li>指定配置文件启动Nginx<ul>\n<li><code>./nginx -c ../conf/nginx.conf</code></li>\n</ul>\n</li>\n<li>重新读取配置文件<ul>\n<li><code>./nginx -s reload</code></li>\n</ul>\n</li>\n<li>检查配置文件是否正确<ul>\n<li><code>./nginx -t</code></li>\n</ul>\n</li>\n<li>停止Nginx<ul>\n<li><code>./nginx -s stop</code>：快速关闭，不管有没有正在处理的请求</li>\n<li><code>./nginx -s quit</code>：优雅的关闭方式，Nginx在退出前完成已经接受的连接请求</li>\n</ul>\n</li>\n<li>重新打开日志<ul>\n<li><code>./nginx -s reopen</code></li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2 id=\"信号控制\"><a href=\"#信号控制\" class=\"headerlink\" title=\"信号控制\"></a>信号控制</h2><p>Nginx允许我们通过信号来控制主进程，用信号的方式可以达到不影响现有连接的目的。具体语法：<code>kill -信号选项 nginx的主进程号</code></p>\n<blockquote>\n<p><strong>信号类型</strong></p>\n<ul>\n<li>INT，TERM：快速关闭信号</li>\n<li>QUIT：从容关闭信号</li>\n<li>HUP：从容重启信号，一般用于修改配置文件后，重启</li>\n<li>USR1：重读日志，一般用于日志的切割</li>\n<li>USR2：平滑升级信号</li>\n<li>WINCH：从容关闭旧进程</li>\n</ul>\n</blockquote>\n<hr>\n<h2 id=\"平滑升级\"><a href=\"#平滑升级\" class=\"headerlink\" title=\"平滑升级\"></a>平滑升级</h2><ol>\n<li><p>下载高版本并完成解压。</p>\n</li>\n<li><p>执行编译。</p>\n<ul>\n<li><code>./configure &amp;&amp; make</code></li>\n</ul>\n</li>\n<li><p>备份低版本nginx可执行文件，将objs目录下编译生成的高版本nginx复制到低版本nginx安装路径下的sbin目录下。</p>\n</li>\n<li><p>执行信号平滑升级</p>\n<ul>\n<li><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">kill -USR2 `cat /usr/local/nginx/logs/nginx.pid`</span></span></code></pre></div></li>\n<li><p>给nginx发送USR2信号后，nginx会将logs&#x2F;nginx.pid文件重命名为nginx.pid.oldbin，然后用新的可执行文件启动一个新的nginx主进程和对应的工作进程，并新建一个新的nginx.pid保存新的主进程号。</p>\n</li>\n<li><p>平滑升级也可以通过执行 <code>make upgrade</code>。</p>\n</li>\n</ul>\n</li>\n<li><p>优雅关闭旧的工作进程</p>\n<ul>\n<li><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">kill -WINCH `cat /usr/local/nginx/logs/nginx.pid.oldbin`</span></span></code></pre></div></li>\n<li><p>旧的主进程号收到WINCH信号后，将旧进程号管理的旧的工作进程优雅的关闭。即一段时间后旧的工作进程全部关闭，只有新的工作进程在处理请求连接。这时，依然可以恢复到旧的进程服务，因为旧的进程的监听socket还未停止。</p>\n</li>\n</ul>\n</li>\n<li><p>中途停止升级，回滚到旧的nginx</p>\n<ul>\n<li><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">kill -HUP `cat /usr/local/nginx/logs/nginx.pid.oldbin`</span></span></code></pre></div></li>\n<li><p>给旧的主进程号发送HUP命令，此时nginx不重新读取配置文件的情况下重新启动旧主进程的工作进程。</p>\n</li>\n</ul>\n</li>\n<li><p>升级完成，退出旧的主进程。</p>\n<ul>\n<li><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">kill -QUIT `cat /usr/local/nginx/logs/nginx.pid.oldbin`</span></span></code></pre></div></li>\n<li><p>给旧的主进程发送QUIT信号后，旧的主进程退出，并移除logs&#x2F;nginx.pid.oldbin文件，nginx的升级完成。</p>\n</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h2 id=\"安装模块\"><a href=\"#安装模块\" class=\"headerlink\" title=\"安装模块\"></a>安装模块</h2><p>在nginx源码目录下运行。</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">./configure --add-module=模块目录</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">make</span></span></code></pre></div><p>备份低版本nginx可执行文件，将objs目录下编译生成的高版本nginx复制到低版本nginx安装路径下的sbin目录下。</p>\n<p>全新安装执行：</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">make install</span></span></code></pre></div><p>平滑升级执行：</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">make upgrade </span></span>\n<span class=\"line\"><span style=\"color: #babed8\">make clean </span></span></code></pre></div><hr>\n<h2 id=\"配置连接数\"><a href=\"#配置连接数\" class=\"headerlink\" title=\"配置连接数\"></a>配置连接数</h2><p>worker_processes：表示开启nginx的worker进程的个数，nginx启动会开两种进程，master进程用来管理调度，worker进程用来处理请求；</p>\n<p>上面表示两种设置方法，比如</p>\n<p>方法一：worker_processes auto;</p>\n<p>　　表示设置服务器cpu核数匹配开启nginx开启的worker进程数</p>\n<p>　　查看cpu核数：cat &#x2F;proc&#x2F;cpuinfo</p>\n<p>方法二：nginx设置cpu亲和力</p>\n<p>　　worker_processes 8;</p>\n<p>　　worker_cpu_affinity 00000001 00000010 00000100 00001000 00010000 00100000 01000000 10000000;</p>\n<p>　　00000001表示启用第一个CPU内核，00000010表示启用第二个CPU内核，以此类推</p>\n<p>worker_cpu_affinity：表示开启八个进程，第一个进程对应着第一个CPU内核，第二个进程对应着第二个CPU内核，以此类推。</p>\n<p>这种设置方法更高效，因将每个cpu核提供给固定的worker进程服务，减少cpu上下文切换带来的资源浪费。</p>\n<hr>\n<h2 id=\"location配置详解\"><a href=\"#location配置详解\" class=\"headerlink\" title=\"location配置详解\"></a>location配置详解</h2><ol>\n<li><p><strong>语法规则</strong>： 指令 前缀 uri</p>\n<ul>\n<li><blockquote>\n<p><code>location [=|~|~*|^~] /uri/ &#123; … &#125;</code></p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li><p>location区分普通匹配和正则匹配</p>\n<ul>\n<li>用前缀 “<del>” 和 “</del><em>”修饰的为正则匹配<br>~   前缀表示区分大小写的正则匹配<br>~</em>  前缀表示不区分大小写的正则匹配</li>\n<li>除上面修饰的前缀（“&#x3D;” 和 “^<del>”，或没有前缀修饰）都为普通匹配<br>&#x3D;   前缀表示精确匹配<br>^</del>  前缀表示uri以某个常规字符串开头，可以理解为url的普通匹配</li>\n</ul>\n</li>\n<li><p>匹配的原则</p>\n<ul>\n<li>普通匹配：优先原则—-&gt;最大前缀匹配原则; 顺序无关</li>\n<li>正则匹配：为顺序匹配，优先原则：谁在前面 就匹配谁；顺序相关</li>\n<li>如果location有普通匹配也有正则匹配，那匹配的原则为：</li>\n<li>首先匹配 &#x3D;，其次匹配^~, 其次是按文件中顺序的正则匹配，不带前缀普通匹配，最后是交给 &#x2F; 通用匹配。当有匹配成功时候，停止匹配，按当前匹配规则处理请求。</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h2 id=\"负载均衡\"><a href=\"#负载均衡\" class=\"headerlink\" title=\"负载均衡\"></a>负载均衡</h2><p>nginx实现负载均衡原理，用户访问首先访问到nginx服务器，然后nginx服务器再从应用服务器集群中选择压力比较小的服务器，然后将该访问请求引向该服务器。如应用服务器集群中某一台服务器崩溃，那么从待选择服务器列表中将该服务器删除，也就是说一个服务器崩溃了，那么nginx服务器不会把请求引向到该服务器。</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">server &#123;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    listen       80;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    server_name  192.168.50.1;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">     location / &#123;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        proxy_pass http://test;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">&#125;</span></span></code></pre></div><ul>\n<li><p>随机轮询</p>\n<ul>\n<li><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">upstream test &#123;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    server 192.168.5.140:8080;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    server 192.168.5.141:8080;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span></code></pre></div></li>\n</ul>\n</li>\n<li><p>权重</p>\n<ul>\n<li><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">upstream test &#123;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    server 192.168.5.140:8080 weight=5;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    server 192.168.5.141:8080 weight=10;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">&#125;</span></span></code></pre></div></li>\n</ul>\n</li>\n<li><p>ip_hash</p>\n<ul>\n<li><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">upstream test &#123;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    ip_hash;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    server 192.168.5.140:8080;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    server 192.168.5.141:8080;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">&#125;</span></span></code></pre></div></li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2 id=\"nginx全局变量\"><a href=\"#nginx全局变量\" class=\"headerlink\" title=\"nginx全局变量\"></a>nginx全局变量</h2><ul>\n<li>$args ：                     #这个变量等于请求行中的参数，同$query_string</li>\n<li>$content_length ：    #请求头中的Content-length字段。</li>\n<li>$content_type ：       #请求头中的Content-Type字段。</li>\n<li>$document_root ：   #当前请求在root指令中指定的值。</li>\n<li>$host ：                     #请求主机头字段，否则为服务器名称。</li>\n<li>$http_user_agent ：  #客户端agent信息</li>\n<li>$http_cookie ：          #客户端cookie信息</li>\n<li>$limit_rate ：              #这个变量可以限制连接速率。</li>\n<li>$request_method ：   #客户端请求的动作，通常为GET或POST。</li>\n<li>$remote_addr ：         #客户端的IP地址。</li>\n<li>$remote_port ：          #客户端的端口。</li>\n<li>$remote_user ：         #已经经过Auth Basic Module验证的用户名。</li>\n<li>$request_filename ： #当前请求的文件路径，由root或alias指令与URI请求生成。</li>\n<li>$scheme ：                #HTTP方法（如http，https）。</li>\n<li>$server_protocol ：    #请求使用的协议，通常是HTTP&#x2F;1.0或HTTP&#x2F;1.1。</li>\n<li>$server_addr ：         #服务器地址，在完成一次系统调用后可以确定这个值。</li>\n<li>$server_name ：       #服务器名称。</li>\n<li>$server_port ：          #请求到达服务器的端口号。</li>\n<li>$request_uri ：          #包含请求参数的原始URI，不包含主机名，如：”&#x2F;foo&#x2F;bar.php?arg&#x3D;baz”。</li>\n<li>$uri ：                        #不带请求参数的当前URI，$uri不包含主机名，如”&#x2F;foo&#x2F;bar.html”。</li>\n<li>$document_uri ：      #与$uri相同</li>\n</ul>\n<hr>\n<h2 id=\"附录：配置文件\"><a href=\"#附录：配置文件\" class=\"headerlink\" title=\"附录：配置文件\"></a>附录：配置文件</h2><div class=\"language-nginx\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">nginx</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">#以哪个用户，运行nginx应用</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">#nobody是个低权限用户，为了安全</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">#user nobody;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">#nginx进程数 启动进程,通常设置成 cpu的核数 查看cpu核数</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># cat /proc/cpuinfo</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">worker_processes </span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">#全局错误日志 </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">#nginx的error_log类型如下（从左到右：debug最详细 crit最少）： </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">#[ debug | info | notice | warn | error | crit ] </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">#例如：error_log logs/nginx_error.log  crit; </span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">#解释：日志文件存储在nginx安装目录下的 logs/nginx_error.log ，错误类型为 crit ，也就是记录最少错误信息； </span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">error_log </span><span style=\"color: #BABED8\"> logs/error.log</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">error_log </span><span style=\"color: #BABED8\"> logs/notice.log </span><span style=\"color: #89DDFF\"> notice;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">error_log </span><span style=\"color: #BABED8\"> logs/info.log  info</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">#PID文件，记录当前启动的nginx的进程ID</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">pid </span><span style=\"color: #BABED8\">       logs/nginx.pid</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">#这个参数表示worker进程最多能打开的文件句柄数，基于liunx系统ulimit设置</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">#查看系统文件句柄数最大值：ulimit -n</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">#Linux一切皆文件，所有请求过来最终目的访问文件，所以该参数值设置等同于liunx系统ulimit设置为优</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">#可以通过linux命令设置  最大的文件句柄数65535</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">worker_rlimit_nofile </span><span style=\"color: #BABED8\">65535</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">#工作模式及连接数上限</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">events</span><span style=\"color: #BABED8\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">   </span><span style=\"color: #676E95; font-style: italic\">#网络模型高效(相当于建立索引查找结果)，nginx配置应该启用该参数</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">   </span><span style=\"color: #676E95; font-style: italic\">#但是仅用于linux2.6以上内核,可以大大提高nginx的性能</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\"> use </span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\"> epoll;</span><span style=\"color: #BABED8\">             </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">   </span><span style=\"color: #676E95; font-style: italic\">#该参数表示设置一个worker进程最多开启多少线程数</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">   </span><span style=\"color: #676E95; font-style: italic\">#优化设置应该等同于worker_rlimit_nofile设置值，表明一个线程处理一个http请求，同时可以处理一个文件数，各个模块之间协调合作不等待。</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\"> worker_connections </span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">65535</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">#设定http服务器，利用它的反向代理功能提供负载均衡支持</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">http</span><span style=\"color: #BABED8\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">#设定mime类型,类型由mime.type文件定义</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">#MIME(Multipurpose Internet Mail Extensions)多用途互联网邮件扩展类型。是设定某种扩展名的文件用一种应用程序来#打开的方式类型，当该扩展名文件被访问的时候，浏览器会自动使用指定应用程序来打开</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">   </span><span style=\"color: #89DDFF\"> include </span><span style=\"color: #BABED8\">      /etc/nginx/mime.types</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">   </span><span style=\"color: #89DDFF\"> default_type </span><span style=\"color: #BABED8\"> application/octet-stream</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">#设定日志格式</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">   </span><span style=\"color: #89DDFF\"> log_format  main</span><span style=\"color: #BABED8\">  </span><span style=\"color: #C3E88D\">&#39;[</span><span style=\"color: #89DDFF\">$</span><span style=\"color: #BABED8\">remote_addr</span><span style=\"color: #C3E88D\">] - [</span><span style=\"color: #89DDFF\">$</span><span style=\"color: #BABED8\">remote_user</span><span style=\"color: #C3E88D\">] [</span><span style=\"color: #89DDFF\">$</span><span style=\"color: #BABED8\">time_local</span><span style=\"color: #C3E88D\">] &quot;</span><span style=\"color: #89DDFF\">$</span><span style=\"color: #BABED8\">request</span><span style=\"color: #C3E88D\">&quot; &#39;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C3E88D\">&#39;</span><span style=\"color: #89DDFF\">$</span><span style=\"color: #BABED8\">status</span><span style=\"color: #C3E88D\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #BABED8\">body_bytes_sent</span><span style=\"color: #C3E88D\"> &quot;</span><span style=\"color: #89DDFF\">$</span><span style=\"color: #BABED8\">http_referer</span><span style=\"color: #C3E88D\">&quot; &#39;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C3E88D\">&#39;&quot;</span><span style=\"color: #89DDFF\">$</span><span style=\"color: #BABED8\">http_user_agent</span><span style=\"color: #C3E88D\">&quot; &quot;</span><span style=\"color: #89DDFF\">$</span><span style=\"color: #BABED8\">http_x_forwarded_for</span><span style=\"color: #C3E88D\">&quot;&#39;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">   </span><span style=\"color: #89DDFF\"> access_log </span><span style=\"color: #BABED8\">   /var/log/nginx/access.log</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">#sendfile 开启高效文件传输模式，sendfile指令指定nginx是否调用sendfile函数来输出文件，对于普通应用设为 on，如果用来进行下载等应用磁盘IO重负载应用，可设置为off，以平衡磁盘与网络I/O处理速度，降低系统的负载。注意：如果图片显示不正常把这个改成off。</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">   </span><span style=\"color: #89DDFF\"> sendfile </span><span style=\"color: #BABED8\">      </span><span style=\"color: #89DDFF\"> on;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">   </span><span style=\"color: #89DDFF\"> tcp_nopush </span><span style=\"color: #BABED8\">   </span><span style=\"color: #89DDFF\"> on;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">#防止网络阻塞</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">   </span><span style=\"color: #89DDFF\"> tcp_nodelay </span><span style=\"color: #BABED8\">      </span><span style=\"color: #89DDFF\"> on;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">#防止网络阻塞</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">#连接超时时间</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">#keepalive_timeout  0;  </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">   </span><span style=\"color: #89DDFF\"> keepalive_timeout </span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">65</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">#长连接超时时间，单位是秒</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">#开启gzip压缩</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">   </span><span style=\"color: #89DDFF\"> gzip  on;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">   </span><span style=\"color: #89DDFF\"> gzip_disable </span><span style=\"color: #C3E88D\">&quot;MSIE [1-6]\\.&quot;</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\"># IE6及以下禁止压缩 </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">   </span><span style=\"color: #89DDFF\"> gzip_min_length </span><span style=\"color: #BABED8\">1k</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">#最小压缩文件大小</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">   </span><span style=\"color: #89DDFF\"> gzip_buffers </span><span style=\"color: #BABED8\">4 </span><span style=\"color: #F78C6C\">16k</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">#压缩缓冲区</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">   </span><span style=\"color: #89DDFF\"> gzip_http_version </span><span style=\"color: #BABED8\">1.0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">#压缩版本（默认1.1，前端如果是squid2.5请使用1.0）</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">   </span><span style=\"color: #89DDFF\"> gzip_comp_level </span><span style=\"color: #BABED8\">2</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">#压缩等级</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">   </span><span style=\"color: #89DDFF\"> gzip_types </span><span style=\"color: #BABED8\">text/plain application/x-javascript text/css application/xml</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">#压缩类型</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">   </span><span style=\"color: #89DDFF\"> gzip_vary </span><span style=\"color: #BABED8\">on</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">#给CDN和代理服务器使用，针对相同url，可以根据头信息返回压缩和非压缩副本</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">#设定请求缓冲</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">   </span><span style=\"color: #89DDFF\"> client_header_buffer_size </span><span style=\"color: #BABED8\">   </span><span style=\"color: #F78C6C\">1k</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">   </span><span style=\"color: #676E95; font-style: italic\">#上传文件大小限制</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">   </span><span style=\"color: #89DDFF\"> large_client_header_buffers </span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">4</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">4k</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">  </span><span style=\"color: #676E95; font-style: italic\">#设定请求缓存</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">#设定负载均衡的服务器列表</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">upstream</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">mysvr </span><span style=\"color: #BABED8\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #676E95; font-style: italic\">#weigth参数表示权值，权值越高被分配到的几率越大</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">server</span><span style=\"color: #BABED8\"> 192.168.8.1x:3128 </span><span style=\"color: #BABED8; font-style: italic\">weight</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">5</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        server 192.168.8.2x:80  </span><span style=\"color: #BABED8; font-style: italic\">weight</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        server 192.168.8.3x:80  </span><span style=\"color: #BABED8; font-style: italic\">weight</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">6</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    &#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    upstream mysvr2 &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #676E95; font-style: italic\">#weigth参数表示权值，权值越高被分配到的几率越大</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        server 192.168.8.x:80  </span><span style=\"color: #BABED8; font-style: italic\">weight</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        server 192.168.8.x:80  </span><span style=\"color: #BABED8; font-style: italic\">weight</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">6</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    &#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">#虚拟主机的配置</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    server &#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #676E95; font-style: italic\">#侦听80端口</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        listen       </span><span style=\"color: #F78C6C\">80</span><span style=\"color: #BABED8\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #676E95; font-style: italic\">#设置编码</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #676E95; font-style: italic\">#charset koi8-r;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #676E95; font-style: italic\">#定义使用www.xx.com访问 域名可以有多个，用空格隔开</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">       </span><span style=\"color: #89DDFF\"> server_name </span><span style=\"color: #BABED8\"> www.xx.com</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #676E95; font-style: italic\">#设定本虚拟主机的访问日志</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">       </span><span style=\"color: #89DDFF\"> access_log </span><span style=\"color: #BABED8\"> logs/www.xx.com.access.log </span><span style=\"color: #89DDFF\"> main;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #676E95; font-style: italic\">#默认请求</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">location</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">/ </span><span style=\"color: #BABED8\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">           </span><span style=\"color: #89DDFF\"> root </span><span style=\"color: #BABED8\">  /root</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">      </span><span style=\"color: #676E95; font-style: italic\">#定义服务器的默认网站根目录位置</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">           </span><span style=\"color: #89DDFF\"> index </span><span style=\"color: #BABED8\">index.php index.html index.htm</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">   </span><span style=\"color: #676E95; font-style: italic\">#定义首页索引文件的名称</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">           </span><span style=\"color: #89DDFF\"> proxy_pass </span><span style=\"color: #BABED8\"> http://mysvr </span><span style=\"color: #89DDFF\">;</span><span style=\"color: #676E95; font-style: italic\">#请求转向mysvr 定义的服务器列表</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">           </span><span style=\"color: #89DDFF\"> client_max_body_size </span><span style=\"color: #BABED8\">10m</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">#允许客户端请求的最大单文件字节数</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">           </span><span style=\"color: #89DDFF\"> client_body_buffer_size </span><span style=\"color: #BABED8\">128k</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">  </span><span style=\"color: #676E95; font-style: italic\">#缓冲区代理缓冲用户端请求的最大字节数，\t</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #676E95; font-style: italic\">#以下是一些反向代理的配置可删除.</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">           </span><span style=\"color: #89DDFF\"> proxy_redirect </span><span style=\"color: #BABED8\">off</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #676E95; font-style: italic\">#后端的Web服务器可以通过X-Forwarded-For获取用户真实IP</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">           </span><span style=\"color: #89DDFF\"> proxy_set_header </span><span style=\"color: #BABED8\">Host </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #BABED8\">host</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">           </span><span style=\"color: #89DDFF\"> proxy_set_header </span><span style=\"color: #BABED8\">X-Real-IP </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #BABED8\">remote_addr</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">           </span><span style=\"color: #89DDFF\"> proxy_set_header </span><span style=\"color: #BABED8\">X-Forwarded-For </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #BABED8\">proxy_add_x_forwarded_for</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">           </span><span style=\"color: #89DDFF\"> proxy_connect_timeout </span><span style=\"color: #BABED8\">90</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">  </span><span style=\"color: #676E95; font-style: italic\">#nginx跟后端服务器连接超时时间(代理连接超时)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">           </span><span style=\"color: #89DDFF\"> proxy_send_timeout </span><span style=\"color: #BABED8\">90</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">     </span><span style=\"color: #676E95; font-style: italic\">#后端服务器数据回传时间(代理发送超时)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">           </span><span style=\"color: #89DDFF\"> proxy_read_timeout </span><span style=\"color: #BABED8\">90</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">     </span><span style=\"color: #676E95; font-style: italic\">#连接成功后，后端服务器响应时间(代理接收超时)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">           </span><span style=\"color: #89DDFF\"> proxy_buffer_size </span><span style=\"color: #BABED8\">4k</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">      </span><span style=\"color: #676E95; font-style: italic\">#设置代理服务器（nginx）保存用户头信息的缓冲区大小</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">           </span><span style=\"color: #89DDFF\"> proxy_buffers </span><span style=\"color: #BABED8\">4 </span><span style=\"color: #F78C6C\">32k</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">       </span><span style=\"color: #676E95; font-style: italic\">#proxy_buffers缓冲区，网页平均在32k以下的话，这样设置</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">           </span><span style=\"color: #89DDFF\"> proxy_busy_buffers_size </span><span style=\"color: #BABED8\">64k</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">#高负荷下缓冲大小（proxy_buffers*2）</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">           </span><span style=\"color: #89DDFF\"> proxy_temp_file_write_size </span><span style=\"color: #BABED8\">64k</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">#设定缓存文件夹大小，大于这个值，将从upstream服务器传</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        &#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #676E95; font-style: italic\"># 定义错误提示页面</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">       </span><span style=\"color: #89DDFF\"> error_page </span><span style=\"color: #BABED8\">  </span><span style=\"color: #F78C6C\">500</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">502</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">503</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">504</span><span style=\"color: #BABED8\"> /50x.html</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> </span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">location</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">/50x.html </span><span style=\"color: #BABED8\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">           </span><span style=\"color: #89DDFF\"> root </span><span style=\"color: #BABED8\">  /root</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        &#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #676E95; font-style: italic\">#本地动静分离反向代理配置</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #676E95; font-style: italic\">#所有jsp的页面均交由tomcat处理</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">location</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">~</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">.(jsp|jspx|do)?$ </span><span style=\"color: #BABED8\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">           </span><span style=\"color: #89DDFF\"> proxy_set_header </span><span style=\"color: #BABED8\">Host </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #BABED8\">host</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">           </span><span style=\"color: #89DDFF\"> proxy_set_header </span><span style=\"color: #BABED8\">X-Real-IP </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #BABED8\">remote_addr</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">           </span><span style=\"color: #89DDFF\"> proxy_set_header </span><span style=\"color: #BABED8\">X-Forwarded-For </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #BABED8\">proxy_add_x_forwarded_for</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">           </span><span style=\"color: #89DDFF\"> proxy_pass </span><span style=\"color: #BABED8\">http://127.0.0.1:8080</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        &#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #676E95; font-style: italic\">#静态文件，nginx自己处理</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">location</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">~</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">^/(images|javascript|js|css|flash|media|static)/ </span><span style=\"color: #BABED8\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">           </span><span style=\"color: #89DDFF\"> root </span><span style=\"color: #BABED8\">/var/www/virtual/htdocs</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #676E95; font-style: italic\">#过期30天，静态文件不怎么更新，过期可以设大一点，如果频繁更新，则可以设置得小一点。</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">           </span><span style=\"color: #89DDFF\"> expires </span><span style=\"color: #BABED8\">30d</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        &#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #676E95; font-style: italic\">#设定查看Nginx状态的地址</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">location</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">/NginxStatus </span><span style=\"color: #BABED8\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF\">stub_status</span><span style=\"color: #BABED8\">            on</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">           </span><span style=\"color: #89DDFF\"> access_log </span><span style=\"color: #BABED8\">           </span><span style=\"color: #89DDFF\"> on;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">           </span><span style=\"color: #89DDFF\"> auth_basic </span><span style=\"color: #BABED8\">            </span><span style=\"color: #C3E88D\">&quot;NginxStatus&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">           </span><span style=\"color: #89DDFF\"> auth_basic_user_file </span><span style=\"color: #BABED8\"> conf/htpasswd</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #676E95; font-style: italic\">#htpasswd文件的内容可以用apache提供的htpasswd工具来产生。</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        &#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #676E95; font-style: italic\">#禁止访问 .htxxx 文件</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">location</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">~</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">/\\.ht </span><span style=\"color: #BABED8\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">           </span><span style=\"color: #89DDFF\"> deny </span><span style=\"color: #BABED8\">all</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        &#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">&#125;</span></span></code></pre></div><hr>\n","text":"安装 下载 wget https://nginx.org/download/nginx-1.24.0.tar.gz 解压安装 tar -zxvf nginx-1...","permalink":"/post/Nginx-学习记录","photos":[],"count_time":{"symbolsCount":"9.5k","symbolsTime":"9 mins."},"categories":[],"tags":[{"name":"Nginx","slug":"Nginx","count":1,"path":"api/tags/Nginx.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">安装</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">基础命令</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BF%A1%E5%8F%B7%E6%8E%A7%E5%88%B6\"><span class=\"toc-text\">信号控制</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B9%B3%E6%BB%91%E5%8D%87%E7%BA%A7\"><span class=\"toc-text\">平滑升级</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85%E6%A8%A1%E5%9D%97\"><span class=\"toc-text\">安装模块</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AE%E8%BF%9E%E6%8E%A5%E6%95%B0\"><span class=\"toc-text\">配置连接数</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#location%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3\"><span class=\"toc-text\">location配置详解</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1\"><span class=\"toc-text\">负载均衡</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#nginx%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">nginx全局变量</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%99%84%E5%BD%95%EF%BC%9A%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">附录：配置文件</span></a></li></ol>","author":{"name":"Aurora","slug":"blog-author","avatar":"https://ik.imagekit.io/bennyxguo/ObsidianestLogo-hex_hecqbw.png?updatedAt=1692679397324","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Java 面试题记录","uid":"bad0988fe1e449dbb6a39d8bce9e4907","slug":"Java-面试题记录","date":"2023-10-16T15:05:56.000Z","updated":"2023-10-16T15:35:34.662Z","comments":true,"path":"api/articles/Java-面试题记录.json","keywords":null,"cover":null,"text":"Java 基础String、StringBuffer 和 StringBuilder 的区别String是只读字符串，它并不是基本数据类型，而是一个对象。从底层...","permalink":"/post/Java-面试题记录","photos":[],"count_time":{"symbolsCount":"8.3k","symbolsTime":"8 mins."},"categories":[],"tags":[{"name":"Java 面试","slug":"Java-面试","count":1,"path":"api/tags/Java-面试.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://ik.imagekit.io/bennyxguo/ObsidianestLogo-hex_hecqbw.png?updatedAt=1692679397324","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{}}